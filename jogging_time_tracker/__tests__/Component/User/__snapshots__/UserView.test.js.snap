// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders admin 1`] = `
<View
  style={
    Object {
      "marginTop": 65,
    }
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Show Timelogs
      </Text>
    </View>
  </View>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        EMAIL
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          autoCapitalize="none"
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        PASSWORD
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          secureTextEntry={true}
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Admin",
            "textColor": undefined,
            "value": "admin",
          },
          Object {
            "label": "Manager",
            "textColor": undefined,
            "value": "manager",
          },
          Object {
            "label": "User",
            "textColor": undefined,
            "value": "",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={2}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Submit
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "marginTop": 65,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        EMAIL
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          autoCapitalize="none"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        PASSWORD
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          secureTextEntry={true}
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Admin",
            "textColor": undefined,
            "value": "admin",
          },
          Object {
            "label": "Manager",
            "textColor": undefined,
            "value": "manager",
          },
          Object {
            "label": "User",
            "textColor": undefined,
            "value": "",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={2}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Submit
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Cancel
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders invalid 1`] = `
<View
  style={
    Object {
      "marginTop": 65,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        EMAIL
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          autoCapitalize="none"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        PASSWORD
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          secureTextEntry={true}
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Admin",
            "textColor": undefined,
            "value": "admin",
          },
          Object {
            "label": "Manager",
            "textColor": undefined,
            "value": "manager",
          },
          Object {
            "label": "User",
            "textColor": undefined,
            "value": "",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={2}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Submit
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Cancel
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders not editing 1`] = `
<View
  style={
    Object {
      "marginTop": 65,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        EMAIL
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          autoCapitalize="none"
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        PASSWORD
        :
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#bdc6cf",
              "borderBottomWidth": 1,
              "marginLeft": 20,
              "marginRight": 20,
            },
            undefined,
          ]
        }
      >
        <TextInput
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Tap to write"
          secureTextEntry={true}
          style={
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 17.5,
                "minHeight": 36,
                "width": 750,
              },
              undefined,
            ]
          }
          testID="textQuestionInput"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
  <View
    style={undefined}
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Admin",
            "textColor": undefined,
            "value": "admin",
          },
          Object {
            "label": "Manager",
            "textColor": undefined,
            "value": "manager",
          },
          Object {
            "label": "User",
            "textColor": undefined,
            "value": "",
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={2}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#0C42FD",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Submit
      </Text>
    </View>
  </View>
</View>
`;
